// Code generated by goctl. DO NOT EDIT.
// Source: ticket.proto

package ticketclient

import (
	"context"

	"github.com/anhao26/zero-cloud/service/ticket/ticket-rpc/types/ticket"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseIDResp   = ticket.BaseIDResp
	BaseResp     = ticket.BaseResp
	BaseUUIDResp = ticket.BaseUUIDResp
	Empty        = ticket.Empty
	IDReq        = ticket.IDReq
	IDsReq       = ticket.IDsReq
	PageInfoReq  = ticket.PageInfoReq
	UUIDReq      = ticket.UUIDReq
	UUIDsReq     = ticket.UUIDsReq

	Ticket interface {
		InitDatabase(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BaseResp, error)
	}

	defaultTicket struct {
		cli zrpc.Client
	}
)

func NewTicket(cli zrpc.Client) Ticket {
	return &defaultTicket{
		cli: cli,
	}
}

func (m *defaultTicket) InitDatabase(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BaseResp, error) {
	client := ticket.NewTicketClient(m.cli.Conn())
	return client.InitDatabase(ctx, in, opts...)
}
