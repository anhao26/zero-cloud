syntax = "proto3";

package system;
option go_package="./system";

message TokenListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  string username = 3;
  string nickname = 4;
  string email = 5;
  string uuid = 6;
}

message UUIDsReq {
  repeated string ids = 1;
}

message MenuInfo {
  uint64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 level = 4;
  uint64 parent_id = 5;
  string path = 6;
  string name = 7;
  string redirect = 8;
  string component = 9;
  uint32 sort = 10;
  bool disabled = 11;
  Meta meta = 12;
  uint32 menu_type = 13;
}

message TokenListResp {
  uint64 total = 1;
  repeated TokenInfo data = 2;
}

message MenuRoleInfo {
  uint64 id = 1;
  uint64 menu_id = 2;
  uint64 role_id = 3;
}

message RoleInfo {
  uint64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 status = 4;
  string name = 5;
  string code = 6;
  string default_router = 7;
  string remark = 8;
  uint32 sort = 9;
}

message PositionListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  string name = 3;
  string code = 4;
  string remark = 5;
}

message BaseResp {
  string msg = 1;
}

message BaseUUIDResp {
  string id = 1;
  string msg = 2;
}

message BaseMsg {
  string msg = 1;
}

message ApiListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  string path = 3;
  string description = 4;
  string api_group = 5;
  string method = 6;
}

message MenuRoleListResp {
  uint64 total = 1;
  repeated MenuRoleInfo data = 2;
}

message DepartmentInfo {
  uint64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 status = 4;
  uint32 sort = 5;
  string name = 6;
  string ancestors = 7;
  string leader = 8;
  string phone = 9;
  string email = 10;
  string remark = 11;
  uint64 parent_id = 12;
}

message IDsReq {
  repeated uint64 ids = 1;
}

message BaseIDResp {
  uint64 id = 1;
  string msg = 2;
}

message DepartmentListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  string name = 3;
  string ancestors = 4;
  string leader = 5;
}

message Meta {
  string title = 1;
  string icon = 2;
  bool hide_menu = 3;
  bool hide_breadcrumb = 4;
  bool ignore_keep_alive = 5;
  bool hide_tab = 6;
  string frame_src = 7;
  bool carry_param = 8;
  bool hide_children_in_menu = 9;
  bool affix = 10;
  uint32 dynamic_level = 11;
  string real_path = 12;
}

message PositionListResp {
  uint64 total = 1;
  repeated PositionInfo data = 2;
}

message ApiInfo {
  uint64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  string path = 4;
  string description = 5;
  string api_group = 6;
  string method = 7;
}

//  base message
message Empty {}

message IDReq {
  uint64 id = 1;
}

message TokenInfo {
  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 status = 4;
  string uuid = 5;
  string token = 6;
  string source = 7;
  int64 expired_at = 8;
}

message UserListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  string username = 3;
  string nickname = 4;
  string email = 5;
  string mobile = 6;
  repeated uint64 role_ids = 7;
  uint64 department_id = 8;
  repeated uint64 position_ids = 9;
}

message ApiListResp {
  uint64 total = 1;
  repeated ApiInfo data = 2;
}

message UserInfo {
  string id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 status = 4;
  string username = 5;
  string password = 6;
  string nickname = 7;
  string description = 8;
  string home_path = 9;
  repeated uint64 role_ids = 10;
  string mobile = 11;
  string email = 12;
  string avatar = 13;
  uint64 department_id = 14;
  repeated uint64 position_ids = 15;
  repeated string role_codes = 16;
}

message MenuInfoList {
  uint64 total = 1;
  repeated MenuInfo data = 2;
}

message PositionInfo {
  uint64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 status = 4;
  uint32 sort = 5;
  string name = 6;
  string code = 7;
  string remark = 8;
}

message RoleListResp {
  uint64 total = 1;
  repeated RoleInfo data = 2;
}

message RoleListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  string name = 3;
  string code = 4;
  string default_router = 5;
}

message UserListResp {
  uint64 total = 1;
  repeated UserInfo data = 2;
}

message UUIDReq {
  string id = 1;
}

message PageInfoReq {
  uint64 page = 1;
  uint64 page_size = 2;
}

message DepartmentListResp {
  uint64 total = 1;
  repeated DepartmentInfo data = 2;
}

message UsernameReq {
  string username = 1;
}

service System {
  //  API management
  //  group: api
  rpc createApi(ApiInfo) returns (BaseIDResp);
  //  group: api
  rpc updateApi(ApiInfo) returns (BaseResp);
  //  group: api
  rpc getApiList(ApiListReq) returns (ApiListResp);
  //  group: api
  rpc getApiById(IDReq) returns (ApiInfo);
  //  group: api
  rpc deleteApi(IDsReq) returns (BaseResp);
  //  group: base
  rpc initDatabase(Empty) returns (BaseResp);
  //  Department management
  //  group: department
  rpc createDepartment(DepartmentInfo) returns (BaseIDResp);
  //  group: department
  rpc updateDepartment(DepartmentInfo) returns (BaseResp);
  //  group: department
  rpc getDepartmentList(DepartmentListReq) returns (DepartmentListResp);
  //  group: department
  rpc getDepartmentById(IDReq) returns (DepartmentInfo);
  //  group: department
  rpc deleteDepartment(IDsReq) returns (BaseResp);
  //  Menu management
  //  group: menu
  rpc createMenu(MenuInfo) returns (BaseIDResp);
  //  group: menu
  rpc updateMenu(MenuInfo) returns (BaseResp);
  //  group: menu
  rpc deleteMenu(IDReq) returns (BaseResp);
  //  group: menu
  rpc getMenuListByRole(BaseMsg) returns (MenuInfoList);
  //  group: menu
  rpc getMenuList(PageInfoReq) returns (MenuInfoList);
  //  Position management
  //  group: position
  rpc createPosition(PositionInfo) returns (BaseIDResp);
  //  group: position
  rpc updatePosition(PositionInfo) returns (BaseResp);
  //  group: position
  rpc getPositionList(PositionListReq) returns (PositionListResp);
  //  group: position
  rpc getPositionById(IDReq) returns (PositionInfo);
  //  group: position
  rpc deletePosition(IDsReq) returns (BaseResp);
  //  Role management
  //  group: role
  rpc createRole(RoleInfo) returns (BaseIDResp);
  //  group: role
  rpc updateRole(RoleInfo) returns (BaseResp);
  //  group: role
  rpc getRoleList(RoleListReq) returns (RoleListResp);
  //  group: role
  rpc getRoleById(IDReq) returns (RoleInfo);
  //  group: role
  rpc deleteRole(IDsReq) returns (BaseResp);
  //  Token management
  //  group: token
  rpc createToken(TokenInfo) returns (BaseUUIDResp);
  //  group: token
  rpc updateToken(TokenInfo) returns (BaseResp);
  //  group: token
  rpc getTokenList(TokenListReq) returns (TokenListResp);
  //  group: token
  rpc getTokenById(UUIDReq) returns (TokenInfo);
  //  group: token
  rpc deleteToken(UUIDsReq) returns (BaseResp);
  //  group: token
  rpc blockUserAllToken(UUIDReq) returns (BaseResp);
  //  User management
  //  group: user
  rpc createUser(UserInfo) returns (BaseUUIDResp);
  //  group: user
  rpc updateUser(UserInfo) returns (BaseResp);
  //  group: user
  rpc getUserList(UserListReq) returns (UserListResp);
  //  group: user
  rpc getUserById(UUIDReq) returns (UserInfo);
  //  group: user
  rpc getUserByUsername(UsernameReq) returns (UserInfo);
  //  group: user
  rpc deleteUser(UUIDsReq) returns (BaseResp);
}

