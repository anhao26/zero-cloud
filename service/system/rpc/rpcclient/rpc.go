// Code generated by goctl. DO NOT EDIT.
// Source: rpc.proto

package rpcclient

import (
	"context"

	"github.com/anhao26/zero-cloud/service/system/rpc/types/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseIDResp   = rpc.BaseIDResp
	BaseResp     = rpc.BaseResp
	BaseUUIDResp = rpc.BaseUUIDResp
	Empty        = rpc.Empty
	IDReq        = rpc.IDReq
	IDsReq       = rpc.IDsReq
	PageInfoReq  = rpc.PageInfoReq
	UUIDReq      = rpc.UUIDReq
	UUIDsReq     = rpc.UUIDsReq

	Rpc interface {
		InitDatabase(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BaseResp, error)
	}

	defaultRpc struct {
		cli zrpc.Client
	}
)

func NewRpc(cli zrpc.Client) Rpc {
	return &defaultRpc{
		cli: cli,
	}
}

func (m *defaultRpc) InitDatabase(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BaseResp, error) {
	client := rpc.NewRpcClient(m.cli.Conn())
	return client.InitDatabase(ctx, in, opts...)
}
