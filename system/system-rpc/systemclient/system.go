// Code generated by goctl. DO NOT EDIT.
// Source: system.proto

package systemclient

import (
	"context"

	"github.com/anhao26/zero-cloud/system/system-rpc/types/system"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseIDResp      = system.BaseIDResp
	BaseResp        = system.BaseResp
	BaseUUIDResp    = system.BaseUUIDResp
	Empty           = system.Empty
	IDReq           = system.IDReq
	IDsReq          = system.IDsReq
	PageInfoReq     = system.PageInfoReq
	StudentInfo     = system.StudentInfo
	StudentListReq  = system.StudentListReq
	StudentListResp = system.StudentListResp
	UUIDReq         = system.UUIDReq
	UUIDsReq        = system.UUIDsReq

	System interface {
		InitDatabase(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BaseResp, error)
		// Student management
		CreateStudent(ctx context.Context, in *StudentInfo, opts ...grpc.CallOption) (*BaseIDResp, error)
		UpdateStudent(ctx context.Context, in *StudentInfo, opts ...grpc.CallOption) (*BaseResp, error)
		GetStudentList(ctx context.Context, in *StudentListReq, opts ...grpc.CallOption) (*StudentListResp, error)
		GetStudentById(ctx context.Context, in *IDReq, opts ...grpc.CallOption) (*StudentInfo, error)
		DeleteStudent(ctx context.Context, in *IDsReq, opts ...grpc.CallOption) (*BaseResp, error)
	}

	defaultSystem struct {
		cli zrpc.Client
	}
)

func NewSystem(cli zrpc.Client) System {
	return &defaultSystem{
		cli: cli,
	}
}

func (m *defaultSystem) InitDatabase(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*BaseResp, error) {
	client := system.NewSystemClient(m.cli.Conn())
	return client.InitDatabase(ctx, in, opts...)
}

// Student management
func (m *defaultSystem) CreateStudent(ctx context.Context, in *StudentInfo, opts ...grpc.CallOption) (*BaseIDResp, error) {
	client := system.NewSystemClient(m.cli.Conn())
	return client.CreateStudent(ctx, in, opts...)
}

func (m *defaultSystem) UpdateStudent(ctx context.Context, in *StudentInfo, opts ...grpc.CallOption) (*BaseResp, error) {
	client := system.NewSystemClient(m.cli.Conn())
	return client.UpdateStudent(ctx, in, opts...)
}

func (m *defaultSystem) GetStudentList(ctx context.Context, in *StudentListReq, opts ...grpc.CallOption) (*StudentListResp, error) {
	client := system.NewSystemClient(m.cli.Conn())
	return client.GetStudentList(ctx, in, opts...)
}

func (m *defaultSystem) GetStudentById(ctx context.Context, in *IDReq, opts ...grpc.CallOption) (*StudentInfo, error) {
	client := system.NewSystemClient(m.cli.Conn())
	return client.GetStudentById(ctx, in, opts...)
}

func (m *defaultSystem) DeleteStudent(ctx context.Context, in *IDsReq, opts ...grpc.CallOption) (*BaseResp, error) {
	client := system.NewSystemClient(m.cli.Conn())
	return client.DeleteStudent(ctx, in, opts...)
}
